@page "/"
@using System.Diagnostics
@inject AwairBlazor.Services.AppData appData
@inject IJSRuntime js
@inject AwairBlazor.Services.ApiService api

<h1>Awair</h1>

<p><b>Awair killed their API (<a href="">details</a>), so this project is dead and the site will now just display demo data.</b> Original options below.</p>

<p>Enter the bearer token from <a href="https://developer.getawair.com/console/access-token">https://developer.getawair.com/console/access-token</a></p>

<p><input type="text" style="width: 100%;" id="bearer" @bind="appData.Bearer.Value" /></p>

<p>CORS proxy for API calls (default: "@appData.DefaultProxy") <a href="https://github.com/smklancher/AwairWeb/issues/16">(more details)</a></p>
<p><input type="text" style="width: 100%;" id="proxy" @bind="appData.Proxy.Value" /></p>
<p><DetailToggle></DetailToggle></p>
<p><TempUnitsToggle></TempUnitsToggle></p>
<p><DemoToggle></DemoToggle></p>
<br />
<button class="btn btn-primary" @onclick="SaveSettings">Save</button>
<button class="btn btn-primary" @onclick="Download">Download API Response JSON</button>
@code{


    private async Task SaveSettings()
    {
        await appData.Bearer.CommitValueAsync();
        await appData.Proxy.CommitValueAsync();
    }

    private async Task Download()
    {

        await api.Download();
    }

    protected override async Task OnInitializedAsync()
    {
        Trace.WriteLine(this.GetType().ToString() + ": Init");
        await appData.InitAsync();
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        Trace.WriteLine(this.GetType().ToString() + $": AfterRender" + (firstRender ? " firstRender" : string.Empty));

        // cache demo data
        if (appData.DemoMode.Value)
        {
            var devices = api.GetDevices();
            var raw = api.GetRawData();
        }

        return base.OnAfterRenderAsync(firstRender);
    }
}